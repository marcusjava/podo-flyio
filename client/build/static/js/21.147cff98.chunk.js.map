{"version":3,"sources":["pages/Client/Charts.jsx","../node_modules/lodash/isSymbol.js","../node_modules/lodash/toNumber.js","../node_modules/lodash/now.js","../node_modules/lodash/_baseTrim.js","../node_modules/lodash/_trimmedEndIndex.js","components/Chart/index.jsx"],"names":["RangePicker","DatePicker","Charts","useState","selectedDate","setSelectedDate","data","setData","onSearch","a","params","startDate","dayjs","format","endDate","axios","get","response","span","bordered","style","marginTop","ref","node","value","onChange","dates","type","icon","onClick","baseGetTag","require","isObjectLike","module","exports","baseTrim","isObject","isSymbol","reIsBadHex","reIsBinary","reIsOctal","freeParseInt","parseInt","other","valueOf","isBinary","test","slice","root","Date","now","trimmedEndIndex","reTrimStart","string","replace","reWhitespace","index","length","charAt","Chart","config","width","height","autoFit","xField","yField","point","size","shape","label","fill"],"mappings":"2RAQQA,EAAgBC,IAAhBD,YAuDOE,UArDf,WAAmB,IAAD,EACwBC,mBAAS,IADjC,mBACTC,EADS,KACKC,EADL,OAEQF,mBAAS,IAFjB,mBAETG,EAFS,KAEHC,EAFG,KAMVC,EAAQ,uCAAG,8BAAAC,EAAA,6DACTC,EAAS,CACbC,UAAWC,IAAMR,EAAa,IAAIS,OAAO,cACzCC,QAASF,IAAMR,EAAa,IAAIS,OAAO,eAH1B,SAMQE,IAAMC,IAAI,yBAA0B,CACzDN,WAPa,OAMTO,EANS,OASfV,EAAQU,EAASX,MATF,2CAAH,qDAYd,OACE,kBAAC,IAAD,CAAKY,KAAM,IACT,kBAAC,IAAD,CAAMC,UAAU,GACd,kBAAC,IAAD,CAAKC,MAAO,CAAEC,UAAW,KACvB,kBAAC,IAAD,CAAKH,KAAM,IACT,kBAAC,IAAD,KACE,kBAAClB,EAAD,CACEsB,IAAK,SAACC,GACUA,GAEhBC,MAAOpB,EACPS,OAAO,aACPY,SAAU,SAACC,GAAD,OAAWrB,EAAgBqB,MAGvC,kBAAC,IAAD,CACEC,KAAK,UACLC,KAAM,kBAAC,IAAD,MACNC,QAASrB,GAHX,gBAUN,kBAAC,IAAD,CAAKY,MAAO,CAAEC,UAAW,MACvB,kBAAC,IAAD,CAAKH,KAAM,IACT,kBAAC,IAAD,CAAOZ,KAAMA,U,oBCvDzB,IAAIwB,EAAaC,EAAQ,KACrBC,EAAeD,EAAQ,KA2B3BE,EAAOC,QALP,SAAkBV,GAChB,MAAuB,iBAATA,GACXQ,EAAaR,IArBF,mBAqBYM,EAAWN,K,oBCzBvC,IAAIW,EAAWJ,EAAQ,KACnBK,EAAWL,EAAQ,KACnBM,EAAWN,EAAQ,KAMnBO,EAAa,qBAGbC,EAAa,aAGbC,EAAY,cAGZC,EAAeC,SA8CnBT,EAAOC,QArBP,SAAkBV,GAChB,GAAoB,iBAATA,EACT,OAAOA,EAET,GAAIa,EAASb,GACX,OA1CM,IA4CR,GAAIY,EAASZ,GAAQ,CACnB,IAAImB,EAAgC,mBAAjBnB,EAAMoB,QAAwBpB,EAAMoB,UAAYpB,EACnEA,EAAQY,EAASO,GAAUA,EAAQ,GAAMA,EAE3C,GAAoB,iBAATnB,EACT,OAAiB,IAAVA,EAAcA,GAASA,EAEhCA,EAAQW,EAASX,GACjB,IAAIqB,EAAWN,EAAWO,KAAKtB,GAC/B,OAAQqB,GAAYL,EAAUM,KAAKtB,GAC/BiB,EAAajB,EAAMuB,MAAM,GAAIF,EAAW,EAAI,GAC3CP,EAAWQ,KAAKtB,GAvDb,KAuD6BA,I,oBC5DvC,IAAIwB,EAAOjB,EAAQ,IAsBnBE,EAAOC,QAJG,WACR,OAAOc,EAAKC,KAAKC,Q,oBCnBnB,IAAIC,EAAkBpB,EAAQ,KAG1BqB,EAAc,OAelBnB,EAAOC,QANP,SAAkBmB,GAChB,OAAOA,EACHA,EAAON,MAAM,EAAGI,EAAgBE,GAAU,GAAGC,QAAQF,EAAa,IAClEC,I,kBCdN,IAAIE,EAAe,KAiBnBtB,EAAOC,QAPP,SAAyBmB,GAGvB,IAFA,IAAIG,EAAQH,EAAOI,OAEZD,KAAWD,EAAaT,KAAKO,EAAOK,OAAOF,MAClD,OAAOA,I,iCCfT,6BA0BeG,IArBf,YAA0B,IAClBC,EAAS,CACbtD,KAFqB,EAARA,KAGbuD,MAAO,IACPC,OAAQ,IACRC,SAAS,EACTC,OAAQ,MACRC,OAAQ,QACRC,MAAO,CACLC,KAAM,EACNC,MAAO,WAETC,MAAO,CACLjD,MAAO,CACLkD,KAAM,UAIZ,OAAO,kBAAC,IAAWV","file":"static/js/21.147cff98.chunk.js","sourcesContent":["import React, { useState } from \"react\";\nimport { Row, Col, Card, DatePicker, Button, Select, Space } from \"antd\";\nimport Chart from \"../../components/Chart\";\nimport dayjs from \"dayjs\";\nimport axios from \"axios\";\nimport { SearchOutlined } from \"@ant-design/icons\";\n\n// import { Container } from './styles';\nconst { RangePicker } = DatePicker;\n\nfunction Charts() {\n  const [selectedDate, setSelectedDate] = useState([]);\n  const [data, setData] = useState([]);\n\n  let searchInput = null;\n\n  const onSearch = async () => {\n    const params = {\n      startDate: dayjs(selectedDate[0]).format(\"YYYY-MM-DD\"),\n      endDate: dayjs(selectedDate[1]).format(\"YYYY-MM-DD\"),\n    };\n\n    const response = await axios.get(\"/clients/stats/clients\", {\n      params,\n    });\n    setData(response.data);\n  };\n\n  return (\n    <Col span={16}>\n      <Card bordered={false}>\n        <Row style={{ marginTop: 50 }}>\n          <Col span={16}>\n            <Space>\n              <RangePicker\n                ref={(node) => {\n                  searchInput = node;\n                }}\n                value={selectedDate}\n                format=\"DD/MM/YYYY\"\n                onChange={(dates) => setSelectedDate(dates)}\n              />\n\n              <Button\n                type=\"primary\"\n                icon={<SearchOutlined />}\n                onClick={onSearch}\n              >\n                Pesquisar\n              </Button>\n            </Space>\n          </Col>\n        </Row>\n        <Row style={{ marginTop: 150 }}>\n          <Col span={16}>\n            <Chart data={data} />\n          </Col>\n        </Row>\n      </Card>\n    </Col>\n  );\n}\n\nexport default Charts;\n","var baseGetTag = require('./_baseGetTag'),\n    isObjectLike = require('./isObjectLike');\n\n/** `Object#toString` result references. */\nvar symbolTag = '[object Symbol]';\n\n/**\n * Checks if `value` is classified as a `Symbol` primitive or object.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.\n * @example\n *\n * _.isSymbol(Symbol.iterator);\n * // => true\n *\n * _.isSymbol('abc');\n * // => false\n */\nfunction isSymbol(value) {\n  return typeof value == 'symbol' ||\n    (isObjectLike(value) && baseGetTag(value) == symbolTag);\n}\n\nmodule.exports = isSymbol;\n","var baseTrim = require('./_baseTrim'),\n    isObject = require('./isObject'),\n    isSymbol = require('./isSymbol');\n\n/** Used as references for various `Number` constants. */\nvar NAN = 0 / 0;\n\n/** Used to detect bad signed hexadecimal string values. */\nvar reIsBadHex = /^[-+]0x[0-9a-f]+$/i;\n\n/** Used to detect binary string values. */\nvar reIsBinary = /^0b[01]+$/i;\n\n/** Used to detect octal string values. */\nvar reIsOctal = /^0o[0-7]+$/i;\n\n/** Built-in method references without a dependency on `root`. */\nvar freeParseInt = parseInt;\n\n/**\n * Converts `value` to a number.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to process.\n * @returns {number} Returns the number.\n * @example\n *\n * _.toNumber(3.2);\n * // => 3.2\n *\n * _.toNumber(Number.MIN_VALUE);\n * // => 5e-324\n *\n * _.toNumber(Infinity);\n * // => Infinity\n *\n * _.toNumber('3.2');\n * // => 3.2\n */\nfunction toNumber(value) {\n  if (typeof value == 'number') {\n    return value;\n  }\n  if (isSymbol(value)) {\n    return NAN;\n  }\n  if (isObject(value)) {\n    var other = typeof value.valueOf == 'function' ? value.valueOf() : value;\n    value = isObject(other) ? (other + '') : other;\n  }\n  if (typeof value != 'string') {\n    return value === 0 ? value : +value;\n  }\n  value = baseTrim(value);\n  var isBinary = reIsBinary.test(value);\n  return (isBinary || reIsOctal.test(value))\n    ? freeParseInt(value.slice(2), isBinary ? 2 : 8)\n    : (reIsBadHex.test(value) ? NAN : +value);\n}\n\nmodule.exports = toNumber;\n","var root = require('./_root');\n\n/**\n * Gets the timestamp of the number of milliseconds that have elapsed since\n * the Unix epoch (1 January 1970 00:00:00 UTC).\n *\n * @static\n * @memberOf _\n * @since 2.4.0\n * @category Date\n * @returns {number} Returns the timestamp.\n * @example\n *\n * _.defer(function(stamp) {\n *   console.log(_.now() - stamp);\n * }, _.now());\n * // => Logs the number of milliseconds it took for the deferred invocation.\n */\nvar now = function() {\n  return root.Date.now();\n};\n\nmodule.exports = now;\n","var trimmedEndIndex = require('./_trimmedEndIndex');\n\n/** Used to match leading whitespace. */\nvar reTrimStart = /^\\s+/;\n\n/**\n * The base implementation of `_.trim`.\n *\n * @private\n * @param {string} string The string to trim.\n * @returns {string} Returns the trimmed string.\n */\nfunction baseTrim(string) {\n  return string\n    ? string.slice(0, trimmedEndIndex(string) + 1).replace(reTrimStart, '')\n    : string;\n}\n\nmodule.exports = baseTrim;\n","/** Used to match a single whitespace character. */\nvar reWhitespace = /\\s/;\n\n/**\n * Used by `_.trim` and `_.trimEnd` to get the index of the last non-whitespace\n * character of `string`.\n *\n * @private\n * @param {string} string The string to inspect.\n * @returns {number} Returns the index of the last non-whitespace character.\n */\nfunction trimmedEndIndex(string) {\n  var index = string.length;\n\n  while (index-- && reWhitespace.test(string.charAt(index))) {}\n  return index;\n}\n\nmodule.exports = trimmedEndIndex;\n","import React from \"react\";\nimport { Column } from \"@ant-design/charts\";\n\n// import { Container } from './styles';\n\nfunction Chart({ data }) {\n  const config = {\n    data,\n    width: 800,\n    height: 400,\n    autoFit: true,\n    xField: \"_id\",\n    yField: \"count\",\n    point: {\n      size: 5,\n      shape: \"diamond\",\n    },\n    label: {\n      style: {\n        fill: \"#aaa\",\n      },\n    },\n  };\n  return <Column {...config} />;\n}\n\nexport default Chart;\n"],"sourceRoot":""}